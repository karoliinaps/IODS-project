df <- read.csv("learning2014.csv")
str(df)
head(df)
summary(df)
df <- read.csv("learning2014.csv")
str(df)
head(df)
summary(df)
library(GGally)
install.packages("GGally")
library(GGally)
library(ggplot2)
p <- ggpairs(df, mapping = aes(), lower = list(combo = wrap("facethist", bins = 20)))
p
names(df)
df_lm <- lm(Points ~ Attitude + stra + surf, data=df)
summary(df_lm)
names(df)
df_lm <- lm(Points ~ Attitude + stra + surf + gender + Age + deep, data=df)
summary(df_lm)
df_lm <- lm(Points ~ Attitude + stra + Age , data=df)
summary(df_lm)
df_lm <- lm(Points ~ Attitude + stra + Age, data=df)
summary(df_lm)
df_lm2 <- lm(Points ~ Attitude, data=df)
summary(df_lm2)
df_lm2 <- lm(Points ~ Attitude, data=df)
summary(df_lm2)
par(mfrow = c(2,2))
plot(df_lm2, which = c(1,2,5))
c(5) + c(7)
c(5)
c(1,2,3,4)[2,3]
c(1,2,3,4)[2:3]
V <- C(1,2,3,4,5,6)
v <- c(1,2,3,4,5,6)
mean(v[1,2,3])> 2
mean(v[13])> 2.
mean(v[1:3])> 2
rbind)1
rbind(1:3, 4=6)
rbind(1:3, 4:6)
cbind(1:3, 4:6)
setwd("~/05 LEARNING/MOOC HYMY/IODS-project/data")
read.csv("student-mat.csv")
read.csv("student-mat.csv", sep=";")
read.csv("student-mat.csv", sep=";", header=T)
read.csv("student-por.csv", sep=";", header=T)
st_mat <- read.csv("student-mat.csv", sep=";", header=T)
st-por <- read.csv("student-por.csv", sep=";", header=T)
st_mat <- read.csv("student-mat.csv", sep=";", header=T)
st_por <- read.csv("student-por.csv", sep=";", header=T)
dim(st_mat)
dim(st_por)
str(st_mat)
str(st_por)
library(dplyr)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math <- read.csv("student-mat.csv", sep=";", header=T)
por <- read.csv("student-por.csv", sep=";", header=T)
dim(math)
dim(por)
str(math)
str(por)
str(math)
str(por)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
join_by
math_por <- inner_join(math, por, by = join_by, suffix=c(".math", ".por"))
dim(math_por)
str(math_por)
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
# create a new data frame with only the joined columns
alc <- select(math_por, one_of(join_by))
# the columns in the datasets which were not used for joining the data
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
# print out the columns not used for joining
notjoined_columns
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
#the average of the answers related to weekday and weekend alcohol consumption:
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
#'high_use'  is TRUE for students for which 'alc_use' is greater than 2
alc <- mutate(alc, high_use = alc_use > 2)
glimpse(alc)
write.csv(alc, file="alc.csv", row.names=FALSE)
setwd("~/05 LEARNING/MOOC HYMY/IODS-project")
read.csv("alc.csv", sep=";", header=T)
read.csv("alc.csv",  header=T)
colnames(alc)
library("ggplot2", lib.loc="~/R/win-library/3.4")
library("dplyr", lib.loc="~/R/win-library/3.4")
install.packages("tidyr")
library("tidyr", lib.loc="~/R/win-library/3.4")
gather(alc) %>% glimpse
```{r}
gather(alc) %>% ggplot(aes(value)) +
facet_wrap("key", scales = "free") + geom_bar()
glimpse(alc)
alc2 <- subset(alc, select=c(high_use))
glimpse((alc2))
alc2 <- subset(alc, select=c(high_use, sex, age, failures, health))
glimpse((alc2))
gather(alc2) %>% ggplot(aes(value)) +
facet_wrap("key", scales = "free") + geom_bar()
alc2 %>% group_by(sex) %>% summarise(count = n())
alc2 %>% group_by(sex, high_use) %>% summarise(count = n(), mean_health = mean(health))
g1 <- ggplot(alc, aes(x = high_use, y = health, col =sex))
g1 + geom_boxplot() + ylab("grade")
g1 <- ggplot(alc, aes(x = high_use, y = health, col =sex))
g1 + geom_boxplot() + ylab("health")
g1 <- ggplot(alc2, aes(x = high_use, y = health, col =sex))
g1 + geom_boxplot() + ylab("health")
g2 <- ggplot(alc2, aes(x = high_use, y = absences, col =sex))
g2 + geom_boxplot() + ylab("absences")
g2 <- ggplot(alc2, aes(x = high_use, y = failures, col =sex))
g2 + geom_boxplot() + ylab("failures")
plot(alc2)
m <- glm(high_use ~ failures + absences + sex + health, data = alc2, family = "binomial")
m <- glm(high_use ~ failures + sex + health + age, data = alc2, family = "binomial")
summary(m)
coef(m)
summary(m)
coef(m)
OR <- coef(m) %>% exp
CI <- confint (m) %>% exp
cbind(OR, CI)
alc <- read.csv("alc.csv",  header=T)
colnames(alc)
glimpse(alc)
gather(alc2) %>% ggplot(aes(value)) +
facet_wrap("key", scales = "free") + geom_bar()
getwd()
alc <- read.csv("alc.csv",  header=T)
colnames(alc)
detach("package:tidyr", unload=TRUE)
library("ggplot2", lib.loc="~/R/win-library/3.4")
library("GGally", lib.loc="~/R/win-library/3.4")
library("tidyr", lib.loc="~/R/win-library/3.4")
library("dplyr", lib.loc="~/R/win-library/3.4")
gather(alc2) %>% ggplot(aes(value)) +
facet_wrap("key", scales = "free") + geom_bar()
library("magrittr", lib.loc="~/R/win-library/3.4")
gather(alc2) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
gather(alc) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
library(marittr)
library(magrittr)
library(magrittr)
library(dplyr)
library(magrittr)
library(dplyr)
library(ggplot2)
library(tidyr)
m <- glm(high_use ~ failures + sex + health + age, data = alc2, family = "binomial")
summary(m)
coef(m)
OR <- coef(m) %>% exp
CI <- confint (m) %>% exp
cbind(OR, CI)
g2 <- ggplot(alc2, aes(x = high_use, y = failures, col =sex))
g2 + geom_boxplot() + ylab("failures")
alc2 %>% group_by(sex, high_use) %>% summarise(count = n(), mean_grade = mean(health))
alc2 %>% group_by(sex, high_use) %>% summarise(count = n(), mean_health = mean(health))
alc2 %>% group_by(sex, high_use) %>% summarise(count = n(), failures = n(failures))
alc2 %>% group_by(sex, high_use) %>% summarise(count = n(), mean_failures = mean(failures))
alc2 %>% group_by(sex, high_use) %>% summarise(count = n(), mean_failures = mean(failures))
gather(alc2) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
